AWSTemplateFormatVersion: 2010-09-09

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Student Information"
        Parameters:
          - StudentName
          - StudentPassword
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcID
          - InternetGatewayId
          - PrivateRouteTableId
          - Subnet01CidrBlock
          - Subnet01AvailabilityZone
          - Subnet02CidrBlock
          - Subnet02AvailabilityZone
          - Subnet03CidrBlock
          - Subnet03AvailabilityZone
          - Region
      -
        Label:
          default: "AMI ID's"
        Parameters:
          - ASAvImageID
          - LDAPImageID
          - MSSCImageID
          - MSSQLImageID
          - IISImageID
          - MySQLImageID
          - ApacheImageID
          - AnsibleImageID
          - TetrationDataIngestImageID
          - TetrationEdgeImageID
          - Win10UserImageID
          - Win10DBAImageID
          - AttackerImageID
          - GuacamoleImageID 
    ParameterLabels:
      StudentName:
        default: "Your Name"
      StudentPassword:
        default: "Password"
      VpcID:
        default: "VPC ID"
      InternetGatewayId:
        default: "Internet Gateway Id"
      PrivateRouteTableId:
        default: "Private Route Table Id"
      Subnet01CidrBlock:
        default: "Subnet 1 Cidr Block"
      Subnet01AvailabilityZone:
        default: "Subnet 1 Availability Zone"
      Subnet02CidrBlock:
        default: "Subnet 2 Cidr Block"
      Subnet02AvailabilityZone:
        default: "Subnet 2 Availability Zone"
      Subnet03CidrBlock:
        default: "Subnet 3 Cidr Block"
      Subnet03AvailabilityZone:
        default: "Subnet 3 Availability Zone"
      Region:
        default: "Region of VPC"

Parameters:
  AccessKey:
    NoEcho: True
    Type: String
    Description: Please enter AWS Access Key
  SecretKey:
    NoEcho: True
    Type: String
    Description: Please enter AWS Secret Key
  StudentIndex:
    Type: String
    Description: Please enter student index number
  StudentName:
    Type: String
    Description: Please enter student name
  StudentPassword:
    NoEcho: True
    Type: String
    Description: Please enter password
  VpcID:
    Type: String
    Description: Please enter the VPC Id
  InternetGatewayId:
    Type: String
    Description: Please enter the Internet Gateway Id
  Subnet01CidrBlock:
    Type: String
    Description: Please enter the Cidr Block for 1st Subnet
  Subnet02CidrBlock:
    Type: String
    Description: Please enter the Cidr Block for 2nd Subnet
  Subnet03CidrBlock:
    Type: String
    Description: Please enter the Cidr Block for 3rd Subnet
  ASAvInsideSubnet:
    Type: String
    Description: Please enter the ASAv Inside Subnet Address
  ASAvOutsideSubnet:
    Type: String
    Description: Please enter the ASAv Outside Subnet Address
  Region:
    Type: String
    Description: Please enter the Region in which VPC is present
  Subnet01AvailabilityZone:
    Type: String
    Description: Please enter the AZ for 1st Subnet
  Subnet02AvailabilityZone:
    Type: String
    Description: Please enter the AZ for 2nd Subnet
  Subnet03AvailabilityZone:
    Type: String
    Description: Please enter the AZ for 3rd Subnet
  ASAvImageID:
    Type: String
    Description: Please enter Image Id for ASAv
  LDAPImageID:
    Type: String
    Description: Please enter Image Id for Active Directory
  MSSCImageID:
    Type: String
    Description: Please enter Image Id for MS System Center
  MSSQLImageID:
    Type: String
    Description: Please enter Image Id for MS Sql
  IISImageID:
    Type: String
    Description: Please enter Image Id for IIS
  MySQLImageID:
    Type: String
    Description: Please enter Image Id for MySql
  ApacheImageID:
    Type: String
    Description: Please enter Image Id for Apache
  AnsibleImageID:
    Type: String
    Description: Please enter Image Id for Ansible
  TetrationDataIngestImageID:
    Type: String
    Description: Please enter Image Id for Tetration Data Ingest
  TetrationEdgeImageID:
    Type: String
    Description: Please enter Image Id for Tetration Edge
  Win10UserImageID:
    Type: String
    Description: Please enter Image Id for Win10 User
  Win10DBAImageID:
    Type: String
    Description: Please enter Image Id for Win10 DBA
  AttackerImageID:
    Type: String
    Description: Please enter Image Id for Mire-based Attacker
  GuacamoleImageID:
    Type: String
    Description: Please enter Image Id for Guacamole
  EKSWorkerImageID:
    Type: String
    Description: Please enter Image Id for EKS Worker Node

Resources:

  # Create Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcID
      Tags:
      - Key: Name
        Value: !Sub "cisco-hol-${StudentName}-public-rt-${Region}"
  
  # Create Private Route Table  
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcID
      Tags:
      - Key: Name
        Value: !Sub "cisco-hol-${StudentName}-private-rt-${Region}"
  
  # Public Defalut Route 
  PublicDefaultRoute: 
   Type: AWS::EC2::Route
   Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayId
      RouteTableId: !Ref PublicRouteTable
    
  # Subnets
  CiscoHOLSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcID
      CidrBlock: !Ref Subnet01CidrBlock
      AvailabilityZone: !Sub "${Region}${Subnet01AvailabilityZone}"
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-public-subnet-01-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab

  CiscoHOLSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcID
      CidrBlock: !Ref Subnet02CidrBlock
      AvailabilityZone: !Sub "${Region}${Subnet02AvailabilityZone}"
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-public-subnet-02-${Region}${Subnet02AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab

  CiscoHOLSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcID
      CidrBlock: !Ref Subnet03CidrBlock
      AvailabilityZone: !Sub "${Region}${Subnet03AvailabilityZone}"
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-private-subnet-${Region}${Subnet03AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab

  # Route Table Associations
  CiscoHOLRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref CiscoHOLSubnet01
      
  CiscoHOLRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref CiscoHOLSubnet02

  CiscoHOLRouteTableAssociation03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref CiscoHOLSubnet03
      
  # Security Groups
  CiscoHOLPublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: !Sub "Cisco HOL Public Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref Subnet01CidrBlock
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref Subnet02CidrBlock
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-public-${Region}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: !Sub "kubernetes.io/cluster/${StudentName}-eks-cluster-${Region}"
          Value: 'owned'
  
  CiscoHOLPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: !Sub "Cisco HOL Private Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref Subnet03CidrBlock
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-private-${Region}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab

  CiscoHOLWebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: !Sub "Cisco HOL Web Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-web-${Region}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: !Sub "kubernetes.io/cluster/${StudentName}-eks-cluster-${Region}"
          Value: 'owned'

  # Provision EC2 Instances
  # LDAP Server
  CiscoHOLEC2ActiveDirectory:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LDAPImageID
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-active-directory-win-2019-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: Active Directory
        - Key: AppCluster
          Value: GC-DC-DNS
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          ipconfig /flushdns
          Clear-DnsClientCache
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01
  
  # MS Systems Center
  CiscoHOLEC2MSSystemCenter:
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref MSSCImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-ms-system-center-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: SCCM
        - Key: AppCluster
          Value: SCCM
      UserData:
       Fn::Base64: !Sub |
        <powershell>
        $adapter = Get-NetAdapter -Name 'Ethernet*'
        Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ("${CiscoHOLEC2ActiveDirectory.PrivateIp}")
        ipconfig /flushdns
        Clear-DnsClientCache
        </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01

  # Windows App Server
  CiscoHOLEC2SQLServer:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref MSSQLImageID
      InstanceType: t2.large
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-sql-win-2019-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: nopCommerce 
        - Key: AppCluster
          Value: DB
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          $adapter = Get-NetAdapter -Name 'Ethernet*'
          Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ("${CiscoHOLEC2ActiveDirectory.PrivateIp}")
          ipconfig /flushdns
          Clear-DnsClientCache
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01
  
  # Windows IIS Server
  CiscoHOLEC2IIS:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2SQLServer
    Properties:
      ImageId: !Ref IISImageID
      InstanceType: t2.large
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-iis-win-2019-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: nopCommerce
        - Key: AppCluster
          Value: App
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          $adapter = Get-NetAdapter -Name 'Ethernet*'
          Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ("${CiscoHOLEC2ActiveDirectory.PrivateIp}")
          ipconfig /flushdns
          Clear-DnsClientCache
          IISReset /Restart
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
            - !Ref CiscoHOLWebSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01

  # # Create Elastic IP Addresses
  # CiscoHOLIISEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     InstanceId: !Ref CiscoHOLEC2IIS

  # Linux DB Server
  CiscoHOLEC2MySQL:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref MySQLImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-mysql-centos7-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: OpenCart
        - Key: AppCluster
          Value: DB
        
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01
  
  # # Create Elastic IP Addresse
  # CiscoHOLApacheEIP:
  #   Type: AWS::EC2::EIP

  # Linux App Server
  CiscoHOLEC2Apache:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref ApacheImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-apache-centos7-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: OpenCart
        - Key: AppCluster
          Value: App
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          ip_address=$(echo $(hostname -I) | sed -e 's/^[ \t]*//')
          rm -rf /var/www/html/config.php
          rm -rf /var/www/html/admin/config.php
          cp /var/www/templates/config.php /var/www/html/config.php
          cp /var/www/templates/admin.config.php /var/www/html/admin/config.php
          sed -i "s/{{app}}/$ip_address/g" /var/www/html/config.php
          sed -i "s/{{app}}/$ip_address/g" /var/www/html/admin/config.php
          sed -i "s/{{db}}/${CiscoHOLEC2MySQL.PrivateIp}/g" /var/www/html/config.php
          sed -i "s/{{db}}/${CiscoHOLEC2MySQL.PrivateIp}/g" /var/www/html/admin/config.php
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
            - !Ref CiscoHOLWebSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01

  # # Elastic IP Association  
  # CiscoHOLAssociateEIPApache:
  #   Type: AWS::EC2::EIPAssociation
  #   Properties:
  #     AllocationId: !GetAtt CiscoHOLApacheEIP.AllocationId
  #     InstanceId: !Ref CiscoHOLEC2Apache

  # Create Tetration Appliances
  CiscoHOLEC2TetData:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref TetrationDataIngestImageID
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-tet-data-centos7-${Region}${Subnet01AvailabilityZone}"
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces01'
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces02'
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces03'
          DeviceIndex: '2'
  
  TetNetworkInterfaces01:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic01-tet-data"
        Description: !Sub "${StudentName} Tet Data Network Interface 01"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet01
        
  TetNetworkInterfaces02:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic02-tet-data"
        Description: !Sub "${StudentName} Tet Data Network Interface 02"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet01
  
  TetNetworkInterfaces03:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic03-tet-data"
        Description: !Sub "${StudentName} Tet Data Network Interface 03"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet01

  # Create Tet Edge EC2
  CiscoHOLEC2TetEdge:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref TetrationEdgeImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-tet-edge-centos7-${Region}${Subnet01AvailabilityZone}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01
  
  # Windows 10 user (AnyConnect, ASDM, Putty, CMD-Telnet, WinSCP)
  CiscoHOLEC2Win10eUser:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref Win10UserImageID
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-win10e-user-${Region}${Subnet02AvailabilityZone}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPrivateSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet03
  
  # Windows 10 DBA (AnyConnect, ASDM, Putty, CMD-Telnet, WinSCP)
  CiscoHOLEC2Win10eDBA:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref Win10DBAImageID
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-win10e-dba-${Region}${Subnet02AvailabilityZone}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPrivateSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet03
  
  # Metasploit Attack Server
  CiscoHOLEC2Attacker:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
    Properties:
      ImageId: !Ref AttackerImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-attacker-${Region}${Subnet02AvailabilityZone}"
      UserData:
        Fn::Base64: !Sub |
          !/bin/bash
          sed -i "s/^PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication.*/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPrivateSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet03
          
  # Create IAM Role For EKS Cluster
  EKSClusterInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - eks.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      RoleName: !Join [ "-", [ !Ref 'AWS::StackName', "EKS-Cluster-Role" ] ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
  
  # Create IAM Role For EKS Worker Node
  EKSWorkerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      RoleName: !Join [ "-", [ !Ref 'AWS::StackName', "EKS-Worker-Role" ] ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  # Attache IAM Role EKS Cluster
  EKSClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref EKSClusterInstanceRole
    
  # # Attache IAM Role EKS Worker
  EKSWorkerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref EKSWorkerInstanceRole
  
  # Create EKS Cluster
  EKSCluster:
    Type: "AWS::EKS::Cluster"
    Properties:
      Name: !Sub "${StudentName}-eks-cluster-${Region}"
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref CiscoHOLWebSecurityGroup
          - !Ref CiscoHOLPublicSecurityGroup
        SubnetIds:
          - !Ref CiscoHOLSubnet01
          - !Ref CiscoHOLSubnet02
      RoleArn: !GetAtt EKSClusterInstanceRole.Arn
  
  # Node Launch Configuration
  EKSWorkerNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: 'True'
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp2
            DeleteOnTermination: true
      IamInstanceProfile: !Ref EKSWorkerInstanceProfile
      ImageId: !Ref EKSWorkerImageID
      InstanceType: t3.medium
      # KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref CiscoHOLPublicSecurityGroup
      UserData: !Base64
        "Fn::Sub": |
          #!/bin/bash
          set -o xtrace
          /etc/eks/bootstrap.sh --apiserver-endpoint '${EKSCluster.Endpoint}' --b64-cluster-ca '${EKSCluster.CertificateAuthorityData}' '${EKSCluster}'
          /opt/aws/bin/cfn-signal --exit-code $? --stack  ${AWS::StackName} --resource NodeGroup --region ${AWS::Region}     
  
  # Node Provision
  EKSWorkerNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref EKSWorkerNodeLaunchConfig
      MinSize: 1
      MaxSize: 2
      VPCZoneIdentifier:
        - !Ref CiscoHOLSubnet01
      Tags:
      - Key: Name
        PropagateAtLaunch: "true"
        Value: !Sub "${StudentName}-eks-worker-${Region}"
      - Key: !Sub kubernetes.io/cluster/${StudentName}-eks-cluster-${Region}
        Value: owned
        PropagateAtLaunch: "true"

  # ASAv Firewall Server
  CiscoHOLEC2ASAv:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
      - CiscoHOLEC2IIS
      - CiscoHOLEC2Apache
    Properties:
      ImageId: !Ref ASAvImageID
      InstanceType: c4.large
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-asav-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
       # - Key: AppSDLC
       #   Value: Lab
       # - Key: AppGroup
       #   Value: Common
       # - Key: AppName
       #   Value: Active Directory
       # - Key: AppCluster
       #   Value: GC-DC-DNS
      UserData: !Base64
        "Fn::Sub": |
          interface GigabitEthernet0/0
          nameif outside
          security-level 0
          ip address dhcp 
          no shutdown
          interface GigabitEthernet0/1
          nameif inside
          security-level 100
          ip address dhcp setroute 
          no shutdown
          username admin password tet123$$! privilege 15
          username ciscolab password tet123$$! privilege 15
          enable password tet123$$!
          access-list ssh standard permit any4
          ssh 0.0.0.0 0.0.0.0 outside
          ssh 0.0.0.0 0.0.0.0 inside
          ssh 0.0.0.0 0.0.0.0 management
          hostname cisco-hol-asav
          domain-name hol.local
          crypto key generate rsa modulus 2048 noconfirm
          ssh version 2
          ssh scopy enable
          aaa authentication ssh console LOCAL
          user-identity default-domain LOCAL
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces01'
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces02'
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces03'
          DeviceIndex: '2'
  
  ASAvNetworkInterfaces01:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic01-asav"
        Description: !Sub "${StudentName} ASAv Network Interface 01"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPrivateSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet03
        
  ASAvNetworkInterfaces02:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic02-asav"
        Description: !Sub "${StudentName} ASAv Network Interface 02"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPrivateSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet03
  
  ASAvNetworkInterfaces03:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: !Sub "${StudentName}-nic03-asav"
        Description: !Sub "${StudentName} ASAv Network Interface 03"
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnet01

  # Create Elastic IP Addresses
  CiscoHOLASAvEIP:
    Type: AWS::EC2::EIP
  
  # Elastic IP Association  
  CiscoHOLAssociateEIPASAv:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      AllocationId: !GetAtt CiscoHOLASAvEIP.AllocationId
      NetworkInterfaceId: !Ref ASAvNetworkInterfaces03

  # Ansible Server
  CiscoHOLEC2Ansible:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: !Ref AnsibleImageID
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-ansible-centos7-${Region}${Subnet01AvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${Region}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: Ansible
        - Key: AppCluster
          Value: Ansible
        
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cat <<EOF > /opt/ansible-tetration-sensor/inventory/hosts
          [linux]
          ${CiscoHOLEC2Apache.PrivateIp}
          ${CiscoHOLEC2MySQL.PrivateIp}
          [linux:vars]
          ansible_user=root
          ansible_password=tet123\$\$!
          ansible_sudo_pass=tet123\$\$!
          [win]
          ${CiscoHOLEC2IIS.PrivateIp}
          ${CiscoHOLEC2SQLServer.PrivateIp}
          ${CiscoHOLEC2ActiveDirectory.PrivateIp}
          ${CiscoHOLEC2MSSystemCenter.PrivateIp}
          [win:vars]
          ansible_user=ciscolab@hol.local
          ansible_password=tet123\$\$!
          ansible_connection=winrm
          ansible_winrm_transport=ntlm
          ansible_winrm_server_cert_validation=ignore
          validate_certs=false
          EOF
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
          sleep 15
          /bin/bash /var/eks-init/bootstrap.sh "${AccessKey}" "${SecretKey}" "${Region}" "${EKSCluster}" "${EKSCluster.Endpoint}" "${EKSCluster.CertificateAuthorityData}" "${EKSWorkerInstanceRole.Arn}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnet01
    
  # Guacamole server
  CiscoHOLEC2Guacamole:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
      - CiscoHOLEC2MSSystemCenter
      - CiscoHOLEC2SQLServer
      - CiscoHOLEC2IIS
      - CiscoHOLEC2MySQL
      - CiscoHOLEC2Apache
      - CiscoHOLEC2Ansible
      - CiscoHOLEC2TetData
      - CiscoHOLEC2TetEdge
      - CiscoHOLEC2Win10eUser
      - CiscoHOLEC2Win10eDBA
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: !Ref GuacamoleImageID
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-guacamole-centos7-${Region}${Subnet01AvailabilityZone}"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cat <<EOF > /etc/guacamole/user-mapping.xml
          <user-mapping>
              <authorize
                  username="${StudentName}"
                  password="${StudentPassword}">
                  <connection name="01) Windows 2019 App - nopCommerce - IIS Web Server">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2IIS.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="02) Windows 2019 App - nopCommerce - MS-SQL DB Server">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2SQLServer.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="03) Linux CentOS7 App - OpenCart eCommerce - Apache Web Server">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2Apache.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                  </connection>
                  <connection name="04) Linux CentOS7 App - OpenCart eCommerce - MySQL DB Server">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2MySQL.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                  </connection>
                  <connection name="05) End Users - Windows10 - Employee">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2Win10eUser.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>	
                  <connection name="06) End Users - Windows10 - SysAdmin">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2Win10eDBA.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>	
                  <connection name="07) Common Services - Ansible">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2Ansible.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>	
                  <connection name="08) Common Services - Microsoft Active Directory 2019">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2ActiveDirectory.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="09) Firewall and VPN - ASAv">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2ASAv.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="enable-sftp">true</param>
                      <param name="font-name">terminus</param>
                  </connection>
                  <connection name="10) Attack Host - KaliLinux - Metasploit">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2Attacker.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>	
                  <connection name="11) Tetration Edge Appliance">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2TetEdge.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>
                  <connection name="12) Tetration Data Ingest Appliance">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2TetData.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123\$\$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>
              </authorize>
          </user-mapping>
          EOF
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart sshd
          systemctl restart network
          systemctl restart tomcat
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces02
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces01
          DeviceIndex: '1'
  
  GuacamoleNetworkInterfaces01:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Tags:
      - Key: name
        Value: !Sub "${StudentName}-nic01-guacamole"
      Description: !Sub "${StudentName} Guacamole Network Interface 01"
      SourceDestCheck: 'false'
      GroupSet: 
      - !Ref CiscoHOLPublicSecurityGroup
      - !Ref CiscoHOLWebSecurityGroup
      SubnetId: !Ref CiscoHOLSubnet01

  GuacamoleNetworkInterfaces02:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Tags:
      - Key: name
        Value: !Sub "${StudentName}-nic02-guacamole"
      Description: !Sub "${StudentName} Guacamole Network Interface 02"
      SourceDestCheck: 'false'
      GroupSet: 
      - !Ref CiscoHOLPrivateSecurityGroup
      SubnetId: !Ref CiscoHOLSubnet03

  # Create Elastic IP Addresses
  CiscoHOLGuacamoleEIP:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-eip-guacamole-${Region}${Subnet01AvailabilityZone}"
  
  # Elastic IP Association  
  CiscoHOLAssociateEIPGuacamole:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt CiscoHOLGuacamoleEIP.AllocationId
      NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces01

  # Lambda Function Basic Execution Role
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Lambda Load Generator For IIS
  LambdaFunctionIIS:
    Type: AWS::Lambda::Function
    Properties:
      Description: "Cisco HOL Load Generator Lambda For IIS"
      Code:
        ZipFile: |
          const http = require('http');
          const https = require('https');
          process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;
          exports.handler = function(event, context) {
              http.get(process.env.APP_URL, (resp) => {
                  let data = '';
                  resp.on('data', (chunk) => {
                      data += chunk;
                  });
                  resp.on('end', () => {
                      console.log('Result:', data);
                      return {
                          result: data
                      };
                  });

              }).on('error', (err) => {
                  console.log('Error:', err.message);
              });
          };
      Handler: index.handler
      Role: !Sub ${LambdaExecutionRole.Arn}
      Environment:
        Variables:
          APP_URL: !GetAtt CiscoHOLEC2IIS.PublicIp
      Runtime: nodejs12.x

  LambdaScheduleIIS:
    Type: AWS::Events::Rule
    Properties:
      Description: "Cisco HOL Load Generator Lambda Event"
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !Sub ${LambdaFunctionIIS.Arn}
          Id: LambdaScheduleIIS

  LambdaSchedulePermissionIIS:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${LambdaFunctionIIS.Arn}
      Principal: events.amazonaws.com
      SourceArn: !Sub ${LambdaScheduleIIS.Arn}
  
  # Lambda Load Generator For Apache
  LambdaFunctionApache:
    Type: AWS::Lambda::Function
    Properties:
      Description: "Cisco HOL Load Generator Lambda For Apache"
      Code:
        ZipFile: |
          const http = require('http');
          const https = require('https');
          process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;
          exports.handler = function(event, context) {
              http.get(process.env.APP_URL, (resp) => {
                  let data = '';
                  resp.on('data', (chunk) => {
                      data += chunk;
                  });
                  resp.on('end', () => {
                      console.log('Result:', data);
                      return {
                          result: data
                      };
                  });

              }).on('error', (err) => {
                  console.log('Error:', err.message);
              });
          };
      Handler: index.handler
      Role: !Sub ${LambdaExecutionRole.Arn}
      Environment:
        Variables:
          APP_URL: !GetAtt CiscoHOLEC2Apache.PublicIp
      Runtime: nodejs12.x

  LambdaScheduleApache:
    Type: AWS::Events::Rule
    Properties:
      Description: "Cisco HOL Load Generator Lambda Event"
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !Sub ${LambdaFunctionApache.Arn}
          Id: LambdaScheduleApache

  LambdaSchedulePermissionApache:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${LambdaFunctionApache.Arn}
      Principal: events.amazonaws.com
      SourceArn: !Sub ${LambdaScheduleApache.Arn}

  # # VPC Flow Log Role
  # Role:
  #   Type: 'AWS::IAM::Role'
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service: 'vpc-flow-logs.amazonaws.com'
  #         Action: 'sts:AssumeRole'
  #     Policies:
  #     - PolicyName: 'flowlogs-policy'
  #       PolicyDocument:
  #         Version: '2012-10-17'
  #         Statement:
  #         - Effect: Allow
  #           Action:
  #           - 'logs:CreateLogGroup'
  #           - 'logs:CreateLogStream'
  #           - 'logs:PutLogEvents'
  #           - 'logs:DescribeLogGroups'
  #           - 'logs:DescribeLogStreams'
  #           - 'logs:CreateLogDelivery'
  #           - 'logs:DeleteLogDelivery'
  #           Resource: '*'

  # # FlowLog
  # MyFlowLog:
  #   Type: AWS::EC2::FlowLog
  #   Properties:
  #     LogDestinationType: s3
  #     LogDestination: arn:aws:s3:::cisco-hol-vpc-flow-log
  #     ResourceId: !Ref VpcID
  #     ResourceType: VPC
  #     TrafficType: ALL

Outputs:
  # General Outputs
  CiscoHOLStudentName:
    Description: Student Account Name
    Value: !Ref StudentName
  CiscoHOLStudentPassword:
    Description: Student Account Password
    Value: !Ref StudentPassword

  # EKS Cluster Outputs
  EKSClusterName:
    Description: EKS Cluster Name
    Value: !Ref EKSCluster
  EKSClusterEndpoint:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EKSCluster.Endpoint
  EKSClusterCertificate:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EKSCluster.CertificateAuthorityData
  EKSWorkerIAMRoleArn:
    Description: EKS Worker Node IAM Role
    Value: !GetAtt EKSWorkerInstanceRole.Arn

  CiscoHOLPublicSubnet01:
    Description: Public Subnet Cidr Block
    Value: !Ref Subnet01CidrBlock
  CiscoHOLPublicSubnet02:
    Description: Public Subnet Cidr Block
    Value: !Ref Subnet02CidrBlock
  CiscoHOLPrivateSubnet:
    Description: Public Subnet Cidr Block
    Value: !Ref Subnet03CidrBlock
  
  # EC2 Instances Outputs
  CiscoHOLASAv:
    Description: ASAv Firewall Server Private IP
    Value: !GetAtt CiscoHOLEC2ASAv.PrivateIp
  CiscoHOLActiveDirectory:
    Description: Active Directory Server Private IP
    Value: !GetAtt CiscoHOLEC2ActiveDirectory.PrivateIp
  CiscoHOLMSSC:
    Description: MS System Center Server Private IP
    Value: !GetAtt CiscoHOLEC2MSSystemCenter.PrivateIp
  CiscoHOLMSSQL:
    Description: MS SQL Server Private IP
    Value: !GetAtt CiscoHOLEC2SQLServer.PrivateIp
  CiscoHOLIISPrivate:
    Description: IIS Server Private IP
    Value: !GetAtt CiscoHOLEC2IIS.PrivateIp
  CiscoHOLIISPublic:
    Description: IIS Server Public IP
    Value: !GetAtt CiscoHOLEC2IIS.PublicIp
  CiscoHOLMySql:
    Description: MySQL Server Private IP
    Value: !GetAtt CiscoHOLEC2MySQL.PrivateIp
  CiscoHOLApachePrivate:
    Description: Apache Server Private IP
    Value: !GetAtt CiscoHOLEC2Apache.PrivateIp
  CiscoHOLApachePublic:
    Description: Apache Server Public IP
    Value: !GetAtt CiscoHOLEC2Apache.PublicIp
  CiscoHOLAnsible:
    Description: Ansible Server Private IP
    Value: !GetAtt CiscoHOLEC2Ansible.PrivateIp
  CiscoHOLTetrationData:
    Description: Tetration Data Ingest Server Private IP
    Value: !GetAtt CiscoHOLEC2TetData.PrivateIp
  CiscoHOLTetrationEdge:
    Description: Tetration Edge Server Private IP
    Value: !GetAtt CiscoHOLEC2TetEdge.PrivateIp
  CiscoHOLWin10User:
    Description: Windows 10 User Server Private IP
    Value: !GetAtt CiscoHOLEC2Win10eUser.PrivateIp
  CiscoHOLWin10DBA:
    Description: Windows 10 DBA Server Private IP
    Value: !GetAtt CiscoHOLEC2Win10eDBA.PrivateIp
  CiscoHOLAttacker:
    Description: Mire-based Attacker Server Private IP
    Value: !GetAtt CiscoHOLEC2Attacker.PrivateIp
  CiscoHOLGuacamolePrivate:  
    Description: Guacamole Server Private IP
    Value: !GetAtt CiscoHOLEC2Guacamole.PrivateIp
  CiscoHOLGuacamolePublic:
    Description: Guacamole Server Public IP
    Value: !Ref CiscoHOLGuacamoleEIP