AWSTemplateFormatVersion: 2010-09-09

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Student Information"
        Parameters:
          - StudentName
          - StudentPassword
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - PublicRouteTableId
          - PrivateRouteTableId
          - SubnetPrivateCidrBlock
          - SubnetPrivateAvailabilityZone
          - SubnetPublicCidrBlock
          - SubnetPublicAvailabilityZone
          - RegionParameter
    ParameterLabels:
      StudentName:
        default: "Your Name"
      StudentPassword:
        default: "Password"
      VpcId:
        default: "VPC ID"
      PublicRouteTableId:
        default: "Public Route Table Id"
      PrivateRouteTableId:
        default: "Private Route Table Id"
      SubnetPrivateCidrBlock:
        default: "Subnet 1 Cidr Block"
      SubnetPrivateAvailabilityZone:
        default: "Subnet 1 Availability Zone"
      SubnetPublicCidrBlock:
        default: "Subnet 2 Cidr Block"
      SubnetPublicAvailabilityZone:
        default: "Subnet 2 Availability Zone"
      RegionParameter:
        default: "Region of VPC"

Parameters:
  StudentName:
    Type: String
    Default: student123
    Description: Please enter your name
  StudentPassword:
    NoEcho: True
    Type: String
    Default: student123
    Description: Please enter your password
  VpcId:
    Type: String
    Default: vpc-07e7ba44fadc5c271
    Description: Please enter the VPC Id
  PublicRouteTableId:
    Type: String
    Default: rtb-0f02b9937c4201309
    Description: Please enter the Public Route Table Id
  PrivateRouteTableId:
    Type: String
    Default: rtb-0c2ae658709749f4c
    Description: Please enter the Private Route Table Id
  SubnetPrivateCidrBlock:
    Type: String
    Default: 172.40.1.0/24
    Description: Please enter the Cidr Block for 1st Subnet
  SubnetPublicCidrBlock:
    Type: String
    Default: 172.40.2.0/24
    Description: Please enter the Cidr Block for 2nd Subnet
  RegionParameter:
    Type: String
    Default: us-east-2
    Description: Please enter the Region in which VPC is present
  SubnetPrivateAvailabilityZone:
    Type: String
    Default: a
    Description: Please enter the AZ for 1st Subnet
  SubnetPublicAvailabilityZone:
    Type: String
    Default: a
    Description: Please enter the AZ for 2nd Subnet

Resources:
  # Subnets
  CiscoHOLSubnetPrivate:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Ref SubnetPrivateCidrBlock
      AvailabilityZone: !Sub "${RegionParameter}${SubnetPrivateAvailabilityZone}"
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-subnet-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab

  CiscoHOLSubnetPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Ref SubnetPublicCidrBlock
      AvailabilityZone: !Sub "${RegionParameter}${SubnetPublicAvailabilityZone}"
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-subnet-${RegionParameter}${SubnetPublicAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
  

  # Route Table Associations
  CiscoHOLRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTableId
      SubnetId: !Ref CiscoHOLSubnetPrivate
      
  CiscoHOLRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTableId
      SubnetId: !Ref CiscoHOLSubnetPublic
      
  # Security Groups
  CiscoHOLPublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub "Cisco HOL Public Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref SubnetPrivateCidrBlock
        # TODO - For testing only will remove in final scripts
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-public-${RegionParameter}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
  
  CiscoHOLPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub "Cisco HOL Private Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref SubnetPublicCidrBlock
        # TODO - For testing only will remove in final scripts
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-private-${RegionParameter}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab

  CiscoHOLWebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub "Cisco HOL Web Security Group For ${StudentName}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-sg-web-${RegionParameter}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab

  # Provision EC2 Instances

  #ASAv Firewall Server
  CiscoHOLEC2ASAv:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-004a26afe2e6a0ab4 #Needs to be changed
      InstanceType: c4.large
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-asav-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
       # - Key: AppSDLC
       #   Value: Lab
       # - Key: AppGroup
       #   Value: Common
       # - Key: AppName
       #   Value: Active Directory
       # - Key: AppCluster
       #   Value: GC-DC-DNS
        
      #UserData:
      #  Fn::Base64: !Sub |
      #    <powershell>
      #    ipconfig /flushdns
      #    </powershell>
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces01'
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces02'
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref 'ASAvNetworkInterfaces03'
          DeviceIndex: '2'
  
  ASAvNetworkInterfaces01:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface1-ASAv
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPrivateSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPublic
        
  ASAvNetworkInterfaces02:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface2-ASAv
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPrivateSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPublic
  
  ASAvNetworkInterfaces03:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface3-ASAv
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        - !Ref CiscoHOLWebSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPrivate

  # Create Elastic IP Addresses
  CiscoHOLASAvEIP:
    Type: AWS::EC2::EIP
  
  # Elastic IP Association  
  CiscoHOLAssociateEIPASAv:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt CiscoHOLASAvEIP.AllocationId
      NetworkInterfaceId: !Ref ASAvNetworkInterfaces03
  
  # LDAP Server
  CiscoHOLEC2ActiveDirectory:
    DependsOn:
      - CiscoHOLEC2ASAv
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-004a26afe2e6a0ab4
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-active-directory-win-2019-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: Active Directory
        - Key: AppCluster
          Value: GC-DC-DNS
        
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          ipconfig /flushdns
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate
  
  # MS Systems Center
  CiscoHOLEC2MSSystemCenter:
    DependsOn:
      - CiscoHOLEC2ASAv
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-069c7f35980cae899
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-ms-system-center-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: SCCM
        - Key: AppCluster
          Value: SCCM
        
      #UserData:
       # Fn::Base64: !Sub |
        #  <powershell>
         # ipconfig /flushdns
         # </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate

  # Windows App servers
  CiscoHOLEC2SQLServer:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-006002ee65a3dcd21
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-sql-win-2019-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: nopCommerce 
        - Key: AppCluster
          Value: DB
        
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          $adapter = Get-NetAdapter -Name 'Ethernet*'
          Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ("${CiscoHOLEC2ActiveDirectory.PrivateIp}")
          ipconfig /flushdns
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate
  
  CiscoHOLEC2IIS:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2SQLServer
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-069c7f35980cae899
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-iis-win-2019-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: nopCommerce
        - Key: AppCluster
          Value: App
        
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          $adapter = Get-NetAdapter -Name 'Ethernet*'
          Set-DNSClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses ("${CiscoHOLEC2ActiveDirectory.PrivateIp}")
          ipconfig /flushdns
          IISReset /Restart
          </powershell>
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet:
            - !Ref CiscoHOLPublicSecurityGroup
            - !Ref CiscoHOLWebSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate

  # Linux App servers
  CiscoHOLEC2MySQL:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-08f0e87dcc6c50d29
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-mysql-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: OpenCart
        - Key: AppCluster
          Value: DB
        
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate

  # Create Elastic IP Addresses
  CiscoHOLApacheEIP:
    Type: AWS::EC2::EIP
  
  # Elastic IP Association  
  CiscoHOLAssociateEIPApache:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt CiscoHOLApacheEIP.AllocationId
      InstanceId: !Ref CiscoHOLEC2Apache
  
  CiscoHOLEC2Apache:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2MySQL
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-032c129b472f40d23
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-apache-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Commerce
        - Key: AppName
          Value: OpenCart
        - Key: AppCluster
          Value: App
        
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          ip_address=$(echo $(hostname -I) | sed -e 's/^[ \t]*//')
          rm -rf /var/www/html/config.php
          rm -rf /var/www/html/admin/config.php
          cp /var/www/templates/config.php /var/www/html/config.php
          cp /var/www/templates/admin.config.php /var/www/html/admin/config.php
          sed -i "s/{{app}}/${CiscoHOLApacheEIP}/g" /var/www/html/config.php
          sed -i "s/{{app}}/${CiscoHOLApacheEIP}/g" /var/www/html/admin/config.php
          sed -i "s/{{db}}/${CiscoHOLEC2MySQL.PrivateIp}/g" /var/www/html/config.php
          sed -i "s/{{db}}/${CiscoHOLEC2MySQL.PrivateIp}/g" /var/www/html/admin/config.php
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
            - !Ref CiscoHOLWebSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate
  
  # Ansible server
  CiscoHOLEC2Ansible:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-04e0c559147d332d9
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-ansible-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
        - Key: Org
          Value: Tetration
        - Key: Geo
          Value: US
        - Key: Cloud
          Value: AWS
        - Key: Region
          Value: !Sub "${RegionParameter}"
        - Key: AppSDLC
          Value: Lab
        - Key: AppGroup
          Value: Common
        - Key: AppName
          Value: Ansible
        - Key: AppCluster
          Value: Ansible
        
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart network
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate
    
  # Create Tetration Appliances
  CiscoHOLEC2TetData:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-08f0e87dcc6c50d29
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-Tet-Data-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces01'
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces02'
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref 'TetNetworkInterfaces03'
          DeviceIndex: '2'
  
  TetNetworkInterfaces01:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface1-Tet-Data
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPrivate
        
  TetNetworkInterfaces02:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface2-Tet-Data
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPrivate
  
  TetNetworkInterfaces03:
      Type: AWS::EC2::NetworkInterface
      Properties:
        Tags:
        - Key: name
          Value: networkinterface3-Tet-Data
        Description: A nice description.
        SourceDestCheck: 'false'
        GroupSet:
        - !Ref CiscoHOLPublicSecurityGroup
        SubnetId: !Ref CiscoHOLSubnetPrivate

  # Create Tet Edge EC2
  CiscoHOLEC2TetEdge:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-08f0e87dcc6c50d29
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-Tet-Edge-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPublicSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPrivate
  
  # Windows 10 user (AnyConnect, ASDM, Putty, CMD-Telnet, WinSCP)
  CiscoHOLEC2Win10eUser:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-07c069355ab4cd817
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-win10e-user-${RegionParameter}${SubnetPrivateAvailabilityZone}"
      #UserData:
       # Fn::Base64: !Sub |
        #  <powershell>
         # ipconfig /flushdns
         # </powershell>
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPrivateSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPublic
  
  # Windows 10 DBA (AnyConnect, ASDM, Putty, CMD-Telnet, WinSCP)
  CiscoHOLEC2Win10eDBA:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-0385cc8d16e7f40da
      InstanceType: t2.micro
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-win10e-dba-${RegionParameter}${SubnetPrivateAvailabilityZone}"
      #UserData:
       # Fn::Base64: !Sub |
        #  <powershell>
         # ipconfig /flushdns
         # </powershell>
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref CiscoHOLPrivateSecurityGroup
          SubnetId: !Ref CiscoHOLSubnetPublic

  # Guacamole server
  CiscoHOLEC2Guacamole:
    Type: AWS::EC2::Instance
    DependsOn:
      - CiscoHOLEC2ActiveDirectory
      - CiscoHOLEC2MSSystemCenter
      - CiscoHOLEC2SQLServer
      - CiscoHOLEC2IIS
      - CiscoHOLEC2MySQL
      - CiscoHOLEC2Apache
      - CiscoHOLEC2Ansible
      - CiscoHOLEC2TetData
      - CiscoHOLEC2TetEdge
      - CiscoHOLEC2Win10eUser
      - CiscoHOLEC2Win10eDBA
      - CiscoHOLEC2ASAv
    Properties:
      ImageId: ami-083682d65d7f1d854
      InstanceType: t2.small
      Tags:
        - Key: Name
          Value: !Sub "cisco-hol-${StudentName}-ec2-guacamole-centos7-${RegionParameter}${SubnetPrivateAvailabilityZone}"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cat <<EOF > /etc/guacamole/user-mapping.xml
          <user-mapping>
              <authorize
                  username="${StudentName}"
                  password="${StudentPassword}">
                  <connection name="01) Windows 2019 App - nopCommerce - IIS Web Server">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2IIS.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="02) Windows 2019 App - nopCommerce - MS-SQL DB Server">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2SQLServer.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="03) Linux CentOS7 App - OpenCart eCommerce - Apache Web Server">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2Apache.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                  </connection>
                  <connection name="04) Linux CentOS7 App - OpenCart eCommerce - MySQL DB Server">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2MySQL.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                  </connection>
                  <connection name="05) Kubernetes Container App - SockShop eCommerce - Master/Worker node">
                      <protocol>ssh</protocol>
                      <param name="hostname">54.198.78.33</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                  </connection>	
                  <connection name="06) End Users - Windows10 - General Employee">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2Win10eUser.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>	
                  <connection name="07) End Users - Windows10 - Database Admin">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2Win10eDBA.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>	
                  <connection name="08) Common Services - Ansible">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2Ansible.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>	
                  <connection name="09) Common Services - Microsoft Active Directory 2019">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2ActiveDirectory.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="10) Common Services - Microsoft Systems Center Configuration Manager">
                      <protocol>rdp</protocol>
                      <param name="hostname">${CiscoHOLEC2MSSystemCenter.PrivateIp}</param>
                      <param name="port">3389</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="domain">hol.local</param>
                      <param name="security">any</param>
                      <param name="ignore-cert">true</param>
                  </connection>
                  <connection name="11) Attack Host - KaliLinux - Metasploit">
                      <protocol>vnc</protocol>
                      <param name="hostname">10.0.1.161</param>
                      <param name="port">5901</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>	
                  <connection name="12) Tetration Edge Appliance">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2TetEdge.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>
                  <connection name="13) Tetration Data Ingest Appliance">
                      <protocol>ssh</protocol>
                      <param name="hostname">${CiscoHOLEC2TetData.PrivateIp}</param>
                      <param name="port">22</param>
                      <param name="username">ciscolab</param>
                      <param name="password">tet123$$!</param>
                      <param name="font-name">terminus</param>
                      <param name="enable-sftp">true</param>
                  </connection>
              </authorize>
          </user-mapping>
          EOF
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          echo "DNS1=${CiscoHOLEC2ActiveDirectory.PrivateIp}" | tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
          systemctl restart sshd
          systemctl restart network
          systemctl restart tomcat
      NetworkInterfaces: 
        - NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces01
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces02
          DeviceIndex: '1'
  
  GuacamoleNetworkInterfaces01:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: 'false'
      GroupSet: 
      - !Ref CiscoHOLPublicSecurityGroup
      - !Ref CiscoHOLWebSecurityGroup
      SubnetId: !Ref CiscoHOLSubnetPublic

  GuacamoleNetworkInterfaces02:
    Type: AWS::EC2::NetworkInterface
    Properties: 
      SourceDestCheck: 'false'
      GroupSet: 
      - !Ref CiscoHOLPublicSecurityGroup
      - !Ref CiscoHOLWebSecurityGroup
      SubnetId: !Ref CiscoHOLSubnetPrivate

  # Create Elastic IP Addresses
  CiscoHOLGuacamoleEIP:
    Type: AWS::EC2::EIP
  
  # Elastic IP Association  
  CiscoHOLAssociateEIPGuacamole:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt CiscoHOLGuacamoleEIP.AllocationId
      NetworkInterfaceId: !Ref GuacamoleNetworkInterfaces02
  
  # Lambda Function for Hello World !
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: "Lambda function that returns Hello World ! "
      Code:
        ZipFile: |
          from __future__ import print_function
          def lambda_handler(event, context):
            print('Hello World!')
            return 'Hello World!'
      Handler: index.lambda_handler
      Role: !Sub ${LambdaExecutionRole.Arn}
      Runtime: python3.6

  # Lambda Function Basic Execution Role
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    

  LambdaSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "A schedule for the Lambda Function"
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !Sub ${LambdaFunction.Arn}
          Id: LambdaSchedule

  LambdaSchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${LambdaFunction.Arn}
      Principal: events.amazonaws.com
      SourceArn: !Sub ${LambdaSchedule.Arn}
  
  # VPC Flow Log Role
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'vpc-flow-logs.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'flowlogs-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogGroups'
            - 'logs:DescribeLogStreams'
            - 'logs:CreateLogDelivery'
            - 'logs:DeleteLogDelivery'
            Resource: '*'
     
  # FlowLog
  MyFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      LogDestinationType: s3
      LogDestination: arn:aws:s3:::cisco-hol-vpc-flow-log
      ResourceId: !Ref VpcId
      ResourceType: VPC
      TrafficType: ALL

Outputs:
  CiscoHOLPublicSubnet:
    Description: Public Subnet Cidr Block
    Value: !Ref SubnetPrivateCidrBlock

  CiscoHOLPrivateSubnet:
    Description: Public Subnet Cidr Block
    Value: !Ref SubnetPublicCidrBlock

  CiscoHOLEC2ASAv:
    Description: ASAv Firewall Server Private IP
    Value: !GetAtt CiscoHOLEC2ASAv.PrivateIp